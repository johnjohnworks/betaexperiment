/* START _button.scss */
@import '../variables';

@media screen {

  button,
  .button,
  .btn,
  a.button,
  a.btn {
    padding: 0.5625em 0.8125em;
    background-color: $color-primary-dark;
    border-color: black;
    border-radius: 1.625em;
    border-style: solid;
    border-width: $border-width;
    color: black;
    cursor: pointer;
    font-size: inherit;
    font-weight: bolder;
    text-decoration: none;
    transition: all ease 1s;
  }

  button:focus,
  button.focus,
  .button:focus,
  .button.focus,
  .btn:focus,
  .btn.focus,
  a.button:focus,
  a.button.focus,
  a.btn:focus,
  a.btn.focus {
    background-color: cyan;
    border-color: cyan;
    color: black;
    outline: thin solid cyan;
  }

  button:active,
  button.active,
  .button:active,
  .button.active,
  .btn:active,
  .btn.active,
  a.button:active,
  a.button.active,
  a.btn:active,
  a.btn.active {
    background-color: white;
    border-color: white;
    color: black;
  }

  button:hover,
  button.hover,
  .button:hover,
  .button.hover,
  .btn:hover,
  .btn.hover,
  a.button:hover,
  a.button.hover,
  a.btn:hover,
  a.btn.hover {
    background-color: $bg-hover-dark;
    border-color: white;
    color: white;
    outline: thin solid white;
  }


  @each $color-name,
  $color-value in $colors-array {

    .button-#{$color-name},
    .btn-#{$color-name} {
      background-color: #{$color-value};
      border-color: #{$color-value};
      $button-color: invert($color-value);
      color: contrast-color($button-color);
    }

    .button-#{$color-name}:hover,
    .btn-#{$color-name}:hover,
    .btn-#{$color-name}.hover {
      background-color: mix($color-value, $hover-color-dark);
    }

    .button-#{$color-name}:focus,
    .btn-#{$color-name}:focus,
    .btn-#{$color-name}.focus {
      background-color: mix($color-value, $focus-color-dark);
    }

    .button-#{$color-name}:active,
    .btn-#{$color-name}:active,
    .btn-#{$color-name}.active {
      background-color: mix($color-value, $active-color-dark);
    }

    .button-#{$color-name}[disabled],
    .btn-#{$color-name}[disabled],
    .button-#{$color-name}.disabled,
    .btn-#{$color-name}.disabled {
      background-color: transparent;
      color: $text-disabled-dark;
      cursor: not-allowed;
    }
  }

  button[disabled],
  button.disabled,
  .button[disabled],
  .button.disabled,
  .btn[disabled],
  .btn.disabled,
  a.button[disabled],
  a.button.disabled,
  a.btn[disabled],
  a.btn.disabled,
  button[disabled]:hover,
  button.disabled:hover,
  .button[disabled]:hover,
  .button.disabled:hover,
  .btn[disabled]:hover,
  .btn.disabled:hover,
  a.button[disabled]:hover,
  a.button.disabled:hover,
  a.btn[disabled]:hover,
  a.btn.disabled:hover {
    background-color: transparent;
    border-color: rgba(255, 255, 255, 0.25);
    border-style: none;
    border-width: 0.0625em;
    color: $text-disabled-dark;
    outline: none;
    cursor: not-allowed;
  }
}